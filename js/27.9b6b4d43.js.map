{"version":3,"file":"js/27.9b6b4d43.js","mappings":"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","sources":["webpack://go-shopping/./src/views/address/edit.vue","webpack://go-shopping/src/views/address/edit.vue","webpack://go-shopping/./src/views/address/edit.vue?5426","webpack://go-shopping/./src/views/address/edit.vue?9a03"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"address-list\"},[_c('van-nav-bar',{attrs:{\"fixed\":\"\",\"title\":\"地址编辑\",\"left-arrow\":\"\"},on:{\"click-left\":_vm.goAddressM}}),_c('div',{staticClass:\"address-edit\"},[_c('van-address-edit',{attrs:{\"address-info\":_vm.addressInfo,\"area-list\":_vm.areaList,\"show-delete\":\"\",\"show-set-default\":_vm.editAddressId ? true : false,\"show-search-result\":\"\",\"search-result\":_vm.searchResult,\"area-columns-placeholder\":['请选择', '请选择', '请选择'],\"detail-maxlength\":20},on:{\"save\":_vm.onSave,\"delete\":_vm.onDelete,\"change-default\":_vm.onChangeDefault}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <!-- 可编辑也可以作为添加地址的页面 -->\r\n  <div class=\"address-list\">\r\n    <van-nav-bar fixed title=\"地址编辑\" left-arrow @click-left=\"goAddressM\" />\r\n\r\n    <div class=\"address-edit\">\r\n      <van-address-edit\r\n        :address-info=\"addressInfo\"\r\n        :area-list=\"areaList\"\r\n        show-delete\r\n        :show-set-default=\"editAddressId ? true : false\"\r\n        show-search-result\r\n        :search-result=\"searchResult\"\r\n        :area-columns-placeholder=\"['请选择', '请选择', '请选择']\"\r\n        :detail-maxlength=\"20\"\r\n        @save=\"onSave\"\r\n        @delete=\"onDelete\"\r\n        @change-default=\"onChangeDefault\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Toast } from 'vant'\r\nimport { mapActions, mapGetters, mapMutations } from 'vuex'\r\nimport { areaList } from '@vant/area-data' // 引入vant官方的地区数据\r\nimport { getAddressDetail, getDefaultAddressId, addAddress, updateAddress, setDefaultAddress, deleteAddress } from '@/api/address'\r\nimport addressCTN from '@/mixins/addressCTN'\r\nimport addressHandler from '@/mixins/addressHandler'\r\n\r\nexport default {\r\n  name: 'AddressEdit',\r\n  mixins: [addressCTN, addressHandler],\r\n  data () {\r\n    return {\r\n      ifDefaultId: 0, // 获取到的默认地址id\r\n      addressInfo: {}, // 初始地址详情对象，若是新建地址则为空对象\r\n      areaList: areaList, // 地区列表\r\n      searchResult: [], // 详细地址搜索结果\r\n      checkDefault: false // 默认地址的标识，数据内的isDefault会随着设置按钮而改变，此字段标识数据原始状态\r\n    }\r\n  },\r\n  computed: {\r\n    // 获取要进行编辑的地址id\r\n    editAddressId () {\r\n      return this.getAddressId()\r\n    }\r\n  },\r\n  async created () {\r\n    // 通过isEdit判断操作类型，渲染数据\r\n    if (this.editAddressId !== 0) {\r\n      console.log('this.editAddressId:', this.editAddressId)\r\n      // 为真，说明是编辑操作，需要获取当前操作的地址信息\r\n      try {\r\n        // 获取当前操作的地址详情\r\n        const { data: { detail } } = await getAddressDetail(this.editAddressId)\r\n        this.addressInfo = detail\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n      try {\r\n        // 获取用户默认地址id\r\n        this.ifDefaultId = await getDefaultAddressId()\r\n      } catch (error) {\r\n        this.addressInfo.isDefault = false\r\n        console.log('用户默认地址为空')\r\n      }\r\n      // 判断是否为默认地址\r\n      if (this.addressInfo.address_id === this.ifDefaultId) {\r\n        // 补全缺少的isDefault属性，并设置为true\r\n        this.addressInfo.isDefault = true\r\n      } else { this.addressInfo.isDefault = false }\r\n      console.log('setDefaultAft:this.addressInfo', this.addressInfo)\r\n      // 将后端返回的短地址code转为标准长地址Code\r\n      const resCode = this.getRegionCode(this.addressInfo.province_id, this.addressInfo.city_id, this.addressInfo.region_id)\r\n      console.log('resCode:', resCode)\r\n\r\n      // 通过Code得到地址Name\r\n      this.addressInfo.region_id = String(resCode)\r\n      // console.log('this.addressInfo.region_id:', this.addressInfo.region_id)\r\n      this.addressInfo.region = this.getRegionStrByCode(this.addressInfo.region_id)\r\n      // 格式化地址详情使其便于组件渲染\r\n      this.formatStructure(this.addressInfo)\r\n      console.log('格式化后的this.addressInfo:', this.addressInfo)\r\n    } else {\r\n      // 说明是新增操作，啥也不做\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions('Address', ['getAddressDetail', 'addAddress', 'updateAddress']),\r\n    ...mapMutations('Address', ['CLEAR_ADDRESS_ID']),\r\n    ...mapGetters('Address', ['getAddressId']),\r\n    // 添加测试地址数据（可传入name参数）\r\n    async addOneTrue (content) {\r\n      // 此处添加一个固定的有效数据 （根据后端接口）\r\n      const dataObj = {\r\n        form: {\r\n          name: content.name,\r\n          phone: '13233324567',\r\n          region: [{ value: 1, label: '北京' }, { value: 2, label: '北京市' }, { value: 3, label: '东城区' }],\r\n          detail: '这是一个有效的测试地址'\r\n        }\r\n      }\r\n      try {\r\n        await addAddress(dataObj)\r\n        Toast('保存成功')\r\n      } catch (error) {\r\n        console.log('添加后端有效地址错误：', error)\r\n      }\r\n    },\r\n    async addOneAdress (addressObj) {\r\n      // 新增地址（根据vant地区库数据封装）\r\n      // 通过areaCode得到省市区三个Code\r\n      console.log('新增地址:', addressObj)\r\n      // 将content的标准地址格式转换为 provinceId, cityId, countyId 对象\r\n      const { provinceId, cityId, countyId } = this.getIdsFromRegionCode(addressObj.areaCode)\r\n      // 封装接口需要的参数对象\r\n      const dataObj = {\r\n        form: {\r\n          name: addressObj.name,\r\n          phone: addressObj.tel,\r\n          region: [\r\n            { value: Number(provinceId), label: addressObj.province },\r\n            { value: Number(cityId), label: addressObj.city },\r\n            { value: Number(countyId), label: addressObj.county }\r\n          ],\r\n          detail: addressObj.addressDetail\r\n        }\r\n      }\r\n      console.log('dataObj:', dataObj)\r\n      try {\r\n        await addAddress(dataObj)\r\n        Toast('保存成功')\r\n        console.log('新增地址成功')\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    },\r\n    async updateOneAdress (addressObj) {\r\n      console.log('更新地址:', addressObj)\r\n      // 通过areaCode得到省市区三个Code\r\n      const res = this.getIdsFromRegionCode(String(addressObj.areaCode))\r\n      console.log('res:', res)\r\n      // 封装接口需要的参数对象\r\n      const dataObj = {\r\n        addressId: String(addressObj.id),\r\n        form: {\r\n          name: addressObj.name,\r\n          phone: addressObj.tel,\r\n          region: [\r\n            { value: res.provinceId, label: addressObj.province },\r\n            { value: res.cityId, label: addressObj.city },\r\n            { value: res.countyId, label: addressObj.county }\r\n          ],\r\n          detail: addressObj.addressDetail\r\n        }\r\n      }\r\n      // console.log('dataObj:', dataObj)\r\n      // 先判断是否设置了isDefault属性\r\n      if (addressObj.isDefault) {\r\n        try {\r\n          await setDefaultAddress(addressObj.id)\r\n          console.log('设置默认地址成功：', addressObj.id)\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n      }\r\n      try {\r\n        await updateAddress(dataObj)\r\n        Toast('修改成功')\r\n        console.log('更新地址成功')\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    },\r\n    // 保存按钮的点击事件\r\n    async onSave (content) {\r\n      // console.log(content)\r\n      // 判断是新建地址还是编辑地址\r\n      if (this.editAddressId === 0) {\r\n        // 新建地址\r\n        this.addOneAdress(content)\r\n        // this.addOneTrue(content) // 测试用\r\n      } else {\r\n        // 编辑地址\r\n        this.updateOneAdress(content)\r\n      }\r\n    },\r\n    // 删除按钮的点击事件\r\n    async onDelete (content) {\r\n      console.log('删除地址:', content)\r\n      await deleteAddress(content.address_id)\r\n      Toast('删除成功')\r\n      // 刷新页面\r\n      this.$router.replace({\r\n        name: 'AddressM',\r\n        query: {\r\n          ...this.$route.query\r\n        }\r\n      })\r\n    },\r\n    formatStructure (item) {\r\n      // 改变item对象的键名\r\n      item.id = item.address_id\r\n      // item.name = item.name\r\n      item.tel = item.phone\r\n      item.province = item.province_id\r\n      item.city = item.city_id\r\n      item.county = item.region_id\r\n      item.addressDetail = item.detail\r\n      item.areaCode = item.region_id\r\n\r\n      // 删除旧的键名\r\n      delete item.address_id\r\n      delete item.phone\r\n      delete item.province_id\r\n      delete item.city_id\r\n      delete item.region_id\r\n      delete item.detail\r\n    },\r\n    goAddressM () {\r\n      this.$router.replace({\r\n        name: 'AddressM',\r\n        query: {\r\n          adsid: this.adsId,\r\n          ...this.$route.query\r\n        }\r\n      })\r\n    },\r\n    // 设置默认地址\r\n    onChangeDefault (val) {\r\n      // console.log(val)\r\n      // 只有编辑才可以设置默认地址\r\n      this.addressInfo.isDefault = val\r\n      console.log('设置默认地址的按钮被触发, this.addressInfo.isDefault:', this.addressInfo.isDefault)\r\n    }\r\n  },\r\n  destroyed () {\r\n    // 清除编辑地址的id\r\n    this.CLEAR_ADDRESS_ID()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.address-list {\r\n  padding-top: 60px; /* 增加与导航栏等高的内边距，避免内容被导航栏覆盖 */\r\n}\r\n\r\n.address-edit {\r\n  padding: 10px 16px; /* 给地址编辑区域增加一些内边距，使内容不贴边 */\r\n  background-color: #fff; /* 设置背景色为白色 */\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./edit.vue?vue&type=template&id=90aecf6a&scoped=true\"\nimport script from \"./edit.vue?vue&type=script&lang=js\"\nexport * from \"./edit.vue?vue&type=script&lang=js\"\nimport style0 from \"./edit.vue?vue&type=style&index=0&id=90aecf6a&prod&scoped=true&lang=less\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"90aecf6a\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","on","goAddressM","addressInfo","areaList","editAddressId","searchResult","onSave","onDelete","onChangeDefault","staticRenderFns","name","mixins","addressCTN","addressHandler","data","ifDefaultId","checkDefault","computed","getAddressId","created","console","log","detail","getAddressDetail","error","getDefaultAddressId","isDefault","address_id","resCode","getRegionCode","province_id","city_id","region_id","String","region","getRegionStrByCode","formatStructure","methods","mapActions","mapMutations","mapGetters","addOneTrue","content","dataObj","form","phone","value","label","addAddress","_Toast","addOneAdress","addressObj","provinceId","cityId","countyId","getIdsFromRegionCode","areaCode","tel","Number","province","city","county","addressDetail","updateOneAdress","res","addressId","id","setDefaultAddress","updateAddress","deleteAddress","$router","replace","query","$route","item","adsid","adsId","val","destroyed","CLEAR_ADDRESS_ID","component"],"sourceRoot":""}